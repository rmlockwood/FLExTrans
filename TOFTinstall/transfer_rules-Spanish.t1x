<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE transfer PUBLIC "-//XMLmind//DTD transfer//EN"
"transfer.dtd">
<transfer
><section-def-cats
><def-cat
n="c_adj"
><cat-item
tags="adj"
></cat-item
><cat-item
tags="adj.*"
></cat-item
></def-cat
><!--   If you would like additional categories based on your FLEx project, run the FLExTrans module: Set Up Transfer Rule Categories and Attributes--><def-cat
n="c_adv"
><cat-item
tags="adv"
></cat-item
><cat-item
tags="adv.*"
></cat-item
></def-cat
><def-cat
n="c_aux"
><cat-item
tags="aux"
></cat-item
><cat-item
tags="aux.*"
></cat-item
></def-cat
><def-cat
n="c_conj"
><cat-item
tags="conj"
></cat-item
><cat-item
tags="conj.*"
></cat-item
></def-cat
><def-cat
n="c_coordconj"
><cat-item
tags="coordconj"
></cat-item
><cat-item
tags="coordconj.*"
></cat-item
></def-cat
><def-cat
n="c_cop"
><cat-item
tags="cop"
></cat-item
><cat-item
tags="cop.*"
></cat-item
></def-cat
><def-cat
n="c_def"
><cat-item
tags="def"
></cat-item
><cat-item
tags="def.*"
></cat-item
></def-cat
><def-cat
n="c_dem"
><cat-item
tags="dem"
></cat-item
><cat-item
tags="dem.*"
></cat-item
></def-cat
><def-cat
n="c_dempro"
><cat-item
tags="dempro"
></cat-item
><cat-item
tags="dempro.*"
></cat-item
></def-cat
><def-cat
n="c_det"
><cat-item
tags="det"
></cat-item
><cat-item
tags="det.*"
></cat-item
></def-cat
><def-cat
n="c_existmrkr"
><cat-item
tags="existmrkr"
></cat-item
><cat-item
tags="existmrkr.*"
></cat-item
></def-cat
><def-cat
n="c_indf"
><cat-item
tags="indf"
></cat-item
><cat-item
tags="indf.*"
></cat-item
></def-cat
><def-cat
n="c_interrog"
><cat-item
tags="interrog"
></cat-item
><cat-item
tags="interrog.*"
></cat-item
></def-cat
><def-cat
n="c_n"
><cat-item
tags="n"
></cat-item
><cat-item
tags="n.*"
></cat-item
></def-cat
><def-cat
n="c_nprop"
><cat-item
tags="nprop"
></cat-item
><cat-item
tags="nprop.*"
></cat-item
></def-cat
><def-cat
n="c_num"
><cat-item
tags="num"
></cat-item
><cat-item
tags="num.*"
></cat-item
></def-cat
><def-cat
n="c_poss"
><cat-item
tags="poss"
></cat-item
><cat-item
tags="poss.*"
></cat-item
></def-cat
><def-cat
n="c_prep"
><cat-item
tags="prep"
></cat-item
><cat-item
tags="prep.*"
></cat-item
></def-cat
><def-cat
n="c_prepart"
><cat-item
tags="prepart"
></cat-item
><cat-item
tags="prepart.*"
></cat-item
></def-cat
><def-cat
n="c_pro"
><cat-item
tags="pro"
></cat-item
><cat-item
tags="pro.*"
></cat-item
></def-cat
><def-cat
n="c_pro-form"
><cat-item
tags="pro-form"
></cat-item
><cat-item
tags="pro-form.*"
></cat-item
></def-cat
><def-cat
n="c_prt"
><cat-item
tags="prt"
></cat-item
><cat-item
tags="prt.*"
></cat-item
></def-cat
><def-cat
n="c_quant"
><cat-item
tags="quant"
></cat-item
><cat-item
tags="quant.*"
></cat-item
></def-cat
><def-cat
n="c_refl"
><cat-item
tags="refl"
></cat-item
><cat-item
tags="refl.*"
></cat-item
></def-cat
><def-cat
n="c_relpro"
><cat-item
tags="relpro"
></cat-item
><cat-item
tags="relpro.*"
></cat-item
></def-cat
><def-cat
n="c_subordconj"
><cat-item
tags="subordconj"
></cat-item
><cat-item
tags="subordconj.*"
></cat-item
></def-cat
><def-cat
n="c_v"
><cat-item
tags="v"
></cat-item
><cat-item
tags="v.*"
></cat-item
></def-cat
></section-def-cats
><section-def-attrs
><def-attr
n="a_absolute_tense_feature"
><attr-item
tags="fut"
></attr-item
><attr-item
tags="pret"
></attr-item
><attr-item
tags="prs"
></attr-item
><attr-item
tags="pst"
></attr-item
></def-attr
><def-attr
n="a_case_feature"
><attr-item
tags="acc"
></attr-item
><attr-item
tags="dat"
></attr-item
><attr-item
tags="nom"
></attr-item
></def-attr
><def-attr
n="a_gender_feature"
><attr-item
tags="f"
></attr-item
><attr-item
tags="m"
></attr-item
></def-attr
><!--   If you would like additional attributes based on your FLEx project, run the FLExTrans module: Set Up Transfer Rule Categories and Attributes--><def-attr
n="a_gender_feature_Temp"
><attr-item
tags="f"
></attr-item
><attr-item
tags="m"
></attr-item
></def-attr
><def-attr
n="a_gram_cat"
><attr-item
c="Adjective"
tags="adj"
></attr-item
><attr-item
c="Adverb"
tags="adv"
></attr-item
><attr-item
c="Auxiliary"
tags="aux"
></attr-item
><attr-item
c="Conjunction"
tags="conj"
></attr-item
><attr-item
c="Coordinating conjunction / Coordinating conjuncion"
tags="coordconj"
></attr-item
><attr-item
c="Copulative verb"
tags="cop"
></attr-item
><attr-item
c="Definite article"
tags="def"
></attr-item
><attr-item
c="Demonstrative Adjective"
tags="dem"
></attr-item
><attr-item
c="Demonstrative Pronoun"
tags="dempro"
></attr-item
><attr-item
c="Determiner"
tags="det"
></attr-item
><attr-item
c="Existential marker"
tags="existmrkr"
></attr-item
><attr-item
c="Indefinite article"
tags="indf"
></attr-item
><attr-item
c="Interrogative pro-form"
tags="interrog"
></attr-item
><attr-item
c="Noun"
tags="n"
></attr-item
><attr-item
c="Proper  Noun"
tags="nprop"
></attr-item
><attr-item
c="Numeral"
tags="num"
></attr-item
><attr-item
c="Possessive pronoun"
tags="poss"
></attr-item
><attr-item
c="Preposition"
tags="prep"
></attr-item
><attr-item
c="Preposition plus Article"
tags="prepart"
></attr-item
><attr-item
c="Pronoun"
tags="pro"
></attr-item
><attr-item
c="Pro-form"
tags="pro-form"
></attr-item
><attr-item
c="Particle"
tags="prt"
></attr-item
><attr-item
c="Quantifier"
tags="quant"
></attr-item
><attr-item
c="Reflexive pronoun"
tags="refl"
></attr-item
><attr-item
c="Relative pronoun"
tags="relpro"
></attr-item
><attr-item
c="Subordinating conjunction"
tags="subordconj"
></attr-item
><attr-item
c="Verb"
tags="v"
></attr-item
></def-attr
><def-attr
n="a_Noun_class"
><attr-item
tags="X_PL"
></attr-item
></def-attr
><def-attr
n="a_number_feature"
><attr-item
tags="pl"
></attr-item
><attr-item
tags="sg"
></attr-item
></def-attr
><def-attr
n="a_person_feature"
><attr-item
tags="1"
></attr-item
><attr-item
tags="2"
></attr-item
><attr-item
tags="3"
></attr-item
></def-attr
><def-attr
n="a_Verb_class"
><attr-item
tags="AR"
></attr-item
><attr-item
tags="ER"
></attr-item
><attr-item
tags="IR"
></attr-item
><attr-item
tags="IRREG"
></attr-item
><attr-item
tags="RE"
></attr-item
></def-attr
><def-attr
n="a_n_number_affixes"
><attr-item
tags="PL"
></attr-item
><attr-item
tags="SG"
></attr-item
></def-attr
></section-def-attrs
><section-def-vars
><!--Used by macro m_n_gender-to-adj_gender--><def-var
n="v_adj_gender"
></def-var
><!--Used by macro m_def_lemma_from_n--><def-var
n="v_def_lemma_from_n"
></def-var
><!--Used by macro m_n_gender-to-indf_gender--><def-var
n="v_indf_gender"
></def-var
></section-def-vars
><section-def-lists
><def-list
n="l_"
><list-item
v="x1.1"
></list-item
><list-item
v="y1.1"
></list-item
><list-item
v="z1.1"
></list-item
></def-list
></section-def-lists
><section-def-macros
><def-macro
n="m_delete_noun_features_Temporary"
npar="1"
><let
><clip
part="a_gender_feature_Temp"
pos="1"
side="tl"
></clip
><lit
v=""
></lit
></let
></def-macro
><def-macro
n="m_delete_copula_features"
npar="1"
><let
><clip
part="a_absolute_tense_feature"
pos="1"
side="tl"
></clip
><lit
v=""
></lit
></let
><let
><clip
part="a_person_feature"
pos="1"
side="tl"
></clip
><lit
v=""
></lit
></let
><let
><clip
part="a_number_feature"
pos="1"
side="tl"
></clip
><lit
v=""
></lit
></let
></def-macro
><def-macro
c="FTM v_def_lemma_from_n def n"
n="m_def_lemma_from_n"
npar="1"
><!--Item 1 is part-of-speech n.--><!--Clear the variable to be sure we don't accidentally retain a prior value--><let
><var
n="v_def_lemma_from_n"
></var
><lit
v=""
></lit
></let
><!--Narrow the set of possible values based on gender (f, m).--><choose
><!--Set v_def_lemma_from_n based on gender = f.--><when
><test
><equal
><clip
part="a_gender_feature"
pos="1"
side="tl"
></clip
><lit-tag
v="f"
></lit-tag
></equal
></test
><!--Narrow the set of possible values based on number (pl, sg) given gender = f.--><choose
><!--Set v_def_lemma_from_n based on number = pl.--><when
><test
><equal
><clip
part="a_n_number_affixes"
pos="1"
side="tl"
></clip
><lit-tag
v="PL"
></lit-tag
></equal
></test
><let
><var
n="v_def_lemma_from_n"
></var
><lit
v="las1.1"
></lit
></let
></when
><!--Set v_def_lemma_from_n based on number = sg.--><when
><test
><equal
><clip
part="a_n_number_affixes"
pos="1"
side="tl"
></clip
><lit-tag
v="SG"
></lit-tag
></equal
></test
><let
><var
n="v_def_lemma_from_n"
></var
><lit
v="la1.1"
></lit
></let
></when
><otherwise
><let
><var
n="v_def_lemma_from_n"
></var
><lit
v="no-lemma-for-f"
></lit
></let
></otherwise
></choose
></when
><!--Set v_def_lemma_from_n based on gender = m.--><when
><test
><equal
><clip
part="a_gender_feature"
pos="1"
side="tl"
></clip
><lit-tag
v="m"
></lit-tag
></equal
></test
><!--Narrow the set of possible values based on number (pl, sg) given gender = m.--><choose
><!--Set v_def_lemma_from_n based on number = pl.--><when
><test
><equal
><clip
part="a_n_number_affixes"
pos="1"
side="tl"
></clip
><lit-tag
v="PL"
></lit-tag
></equal
></test
><let
><var
n="v_def_lemma_from_n"
></var
><lit
v="los1.1"
></lit
></let
></when
><!--Set v_def_lemma_from_n based on number = sg.--><when
><test
><equal
><clip
part="a_n_number_affixes"
pos="1"
side="tl"
></clip
><lit-tag
v="SG"
></lit-tag
></equal
></test
><let
><var
n="v_def_lemma_from_n"
></var
><lit
v="el1.1"
></lit
></let
></when
><otherwise
><let
><var
n="v_def_lemma_from_n"
></var
><lit
v="no-lemma-for-m"
></lit
></let
></otherwise
></choose
></when
><otherwise
><let
><var
n="v_def_lemma_from_n"
></var
><lit
v="no-lemma-for-"
></lit
></let
></otherwise
></choose
></def-macro
><def-macro
n="m_n_gender-to-adj_gender"
npar="1"
><!--Clear the variable to be sure we don't accidentally retain a prior value--><let
><var
n="v_adj_gender"
></var
><lit
v=""
></lit
></let
><choose
><when
><test
><equal
><clip
part="a_gender_feature"
pos="1"
side="tl"
></clip
><lit-tag
v="f"
></lit-tag
></equal
></test
><let
><var
n="v_adj_gender"
></var
><lit-tag
v="FEM_a"
></lit-tag
></let
></when
><when
><test
><equal
><clip
part="a_gender_feature"
pos="1"
side="tl"
></clip
><lit-tag
v="m"
></lit-tag
></equal
></test
><let
><var
n="v_adj_gender"
></var
><lit-tag
v="MASC_a"
></lit-tag
></let
></when
><otherwise
><let
><var
n="v_adj_gender"
></var
><lit-tag
v="gender-UNK"
></lit-tag
></let
></otherwise
></choose
></def-macro
><def-macro
n="m_n_gender-to-indf_gender"
npar="1"
><!--Clear the variable to be sure we don't accidentally retain a prior value--><let
><var
n="v_indf_gender"
></var
><lit
v=""
></lit
></let
><choose
><when
><test
><equal
><clip
part="a_gender_feature"
pos="1"
side="tl"
></clip
><lit-tag
v="f"
></lit-tag
></equal
></test
><let
><var
n="v_indf_gender"
></var
><lit-tag
v="FEM"
></lit-tag
></let
></when
><when
><test
><equal
><clip
part="a_gender_feature"
pos="1"
side="tl"
></clip
><lit-tag
v="m"
></lit-tag
></equal
></test
><let
><var
n="v_indf_gender"
></var
><lit-tag
v="MASC"
></lit-tag
></let
></when
><otherwise
><let
><var
n="v_indf_gender"
></var
><lit-tag
v="gender-UNK"
></lit-tag
></let
></otherwise
></choose
></def-macro
></section-def-macros
><section-rules
><rule
comment="Def Adj Noun: def adj n"
><!--Rule Assistant Description: None--><pattern
><pattern-item
n="c_def"
></pattern-item
><pattern-item
n="c_adj"
></pattern-item
><pattern-item
n="c_n"
></pattern-item
></pattern
><action
><!--Generate and output def--><!--Determine the appropriate lemma for def and store it in a variable named v_def_lemma_from_n.--><call-macro
n="m_def_lemma_from_n"
><with-param
pos="3"
></with-param
></call-macro
><out
><lu
><get-case-from
pos="1"
><var
n="v_def_lemma_from_n"
></var
></get-case-from
><clip
part="a_gram_cat"
pos="1"
side="tl"
></clip
></lu
></out
><!--Generate and output n--><out
><b
></b
><lu
><clip
part="lem"
pos="3"
side="tl"
></clip
><clip
part="a_gram_cat"
pos="3"
side="tl"
></clip
><clip
part="a_n_number_affixes"
pos="3"
side="tl"
></clip
></lu
></out
><!--Generate and output adj--><!--Determine the appropriate gender tag for adj and store it in a variable named v_adj_gender.--><call-macro
n="m_n_gender-to-adj_gender"
><with-param
pos="3"
></with-param
></call-macro
><out
><b
></b
><lu
><clip
part="lem"
pos="2"
side="tl"
></clip
><clip
part="a_gram_cat"
pos="2"
side="tl"
></clip
><var
n="v_adj_gender"
></var
><clip
part="a_n_number_affixes"
pos="3"
side="tl"
></clip
></lu
></out
></action
></rule
><rule
comment="Def Adj Noun: adj n"
><!--Rule Assistant Description: None--><pattern
><pattern-item
n="c_adj"
></pattern-item
><pattern-item
n="c_n"
></pattern-item
></pattern
><action
><!--Generate and output n--><out
><lu
><get-case-from
pos="1"
><clip
part="lem"
pos="2"
side="tl"
></clip
></get-case-from
><clip
part="a_gram_cat"
pos="2"
side="tl"
></clip
><clip
part="a_n_number_affixes"
pos="2"
side="tl"
></clip
></lu
></out
><!--Generate and output adj--><!--Determine the appropriate gender tag for adj and store it in a variable named v_adj_gender.--><call-macro
n="m_n_gender-to-adj_gender"
><with-param
pos="2"
></with-param
></call-macro
><out
><b
></b
><lu
><get-case-from
pos="2"
><clip
part="lem"
pos="1"
side="tl"
></clip
></get-case-from
><clip
part="a_gram_cat"
pos="1"
side="tl"
></clip
><var
n="v_adj_gender"
></var
><clip
part="a_n_number_affixes"
pos="2"
side="tl"
></clip
></lu
></out
></action
></rule
><rule
comment="Def Adj Noun: def n"
><!--Rule Assistant Description: None--><pattern
><pattern-item
n="c_def"
></pattern-item
><pattern-item
n="c_n"
></pattern-item
></pattern
><action
><!--Generate and output def--><!--Determine the appropriate lemma for def and store it in a variable named v_def_lemma_from_n.--><call-macro
n="m_def_lemma_from_n"
><with-param
pos="2"
></with-param
></call-macro
><out
><lu
><get-case-from
pos="1"
><var
n="v_def_lemma_from_n"
></var
></get-case-from
><clip
part="a_gram_cat"
pos="1"
side="tl"
></clip
></lu
></out
><!--Generate and output n--><out
><b
></b
><lu
><clip
part="lem"
pos="2"
side="tl"
></clip
><clip
part="a_gram_cat"
pos="2"
side="tl"
></clip
><clip
part="a_n_number_affixes"
pos="2"
side="tl"
></clip
></lu
></out
></action
></rule
><rule
comment="Def Adj Noun: n"
><!--Rule Assistant Description: None--><pattern
><pattern-item
n="c_n"
></pattern-item
></pattern
><action
><!--Generate and output n--><out
><lu
><clip
part="lem"
pos="1"
side="tl"
></clip
><clip
part="a_gram_cat"
pos="1"
side="tl"
></clip
><clip
part="a_n_number_affixes"
pos="1"
side="tl"
></clip
></lu
></out
></action
></rule
><rule
comment="Indef Adj Noun: indf adj n"
><!--Rule Assistant Description: None--><pattern
><pattern-item
n="c_indf"
></pattern-item
><pattern-item
n="c_adj"
></pattern-item
><pattern-item
n="c_n"
></pattern-item
></pattern
><action
><!--Generate and output indf--><!--Determine the appropriate gender tag for indf and store it in a variable named v_indf_gender.--><call-macro
n="m_n_gender-to-indf_gender"
><with-param
pos="3"
></with-param
></call-macro
><out
><lu
><clip
part="lem"
pos="1"
side="tl"
></clip
><clip
part="a_gram_cat"
pos="1"
side="tl"
></clip
><var
n="v_indf_gender"
></var
><clip
part="a_n_number_affixes"
pos="3"
side="tl"
></clip
></lu
></out
><!--Generate and output n--><out
><b
></b
><lu
><clip
part="lem"
pos="3"
side="tl"
></clip
><clip
part="a_gram_cat"
pos="3"
side="tl"
></clip
><clip
part="a_n_number_affixes"
pos="3"
side="tl"
></clip
></lu
></out
><!--Generate and output adj--><!--Determine the appropriate gender tag for adj and store it in a variable named v_adj_gender.--><call-macro
n="m_n_gender-to-adj_gender"
><with-param
pos="3"
></with-param
></call-macro
><out
><b
></b
><lu
><clip
part="lem"
pos="2"
side="tl"
></clip
><clip
part="a_gram_cat"
pos="2"
side="tl"
></clip
><var
n="v_adj_gender"
></var
><clip
part="a_n_number_affixes"
pos="3"
side="tl"
></clip
></lu
></out
></action
></rule
><rule
comment="Indef Adj Noun: indf n"
><!--Rule Assistant Description: None--><pattern
><pattern-item
n="c_indf"
></pattern-item
><pattern-item
n="c_n"
></pattern-item
></pattern
><action
><!--Generate and output indf--><!--Determine the appropriate gender tag for indf and store it in a variable named v_indf_gender.--><call-macro
n="m_n_gender-to-indf_gender"
><with-param
pos="2"
></with-param
></call-macro
><out
><lu
><clip
part="lem"
pos="1"
side="tl"
></clip
><clip
part="a_gram_cat"
pos="1"
side="tl"
></clip
><var
n="v_indf_gender"
></var
><clip
part="a_n_number_affixes"
pos="2"
side="tl"
></clip
></lu
></out
><!--Generate and output n--><out
><b
></b
><lu
><clip
part="lem"
pos="2"
side="tl"
></clip
><clip
part="a_gram_cat"
pos="2"
side="tl"
></clip
><clip
part="a_n_number_affixes"
pos="2"
side="tl"
></clip
></lu
></out
></action
></rule
><rule
comment="Verb"
><!--Rule Assistant Description: Just deletes features--><pattern
><pattern-item
n="c_v"
></pattern-item
></pattern
><action
><let
><clip
part="a_Verb_class"
pos="1"
side="tl"
></clip
><lit
v=""
></lit
></let
><!--Generate and output v--><out
><lu
><clip
part="whole"
pos="1"
side="tl"
></clip
></lu
></out
></action
></rule
><rule
comment="Copula"
><!--Rule Assistant Description: Just deletes features--><pattern
><pattern-item
n="c_cop"
></pattern-item
></pattern
><action
><call-macro
n="m_delete_copula_features"
><with-param
pos="1"
></with-param
></call-macro
><!--Generate and output v--><out
><lu
><clip
part="whole"
pos="1"
side="tl"
></clip
></lu
></out
></action
></rule
><rule
comment="Nouns - Temporary"
><pattern
><pattern-item
n="c_n"
></pattern-item
></pattern
><action
><call-macro
n="m_delete_noun_features_Temporary"
><with-param
pos="1"
></with-param
></call-macro
><out
><lu
><clip
part="whole"
pos="1"
side="tl"
></clip
></lu
></out
></action
></rule
></section-rules
></transfer
>
